<div class="flex m-4">
  <div id="text-section" class="overflow-scroll max-h-[75vh] dark:text-white">
    <div id="section1" class="h-[75vh] section">
      <h1>
        <span class="magic">
          <span class="magic-star">
            <svg viewBox="0 0 512 512">
              <path
                d="M512 255.1c0 11.34-7.406 20.86-18.44 23.64l-171.3 42.78l-42.78 171.1C276.7 504.6 267.2 512 255.9 512s-20.84-7.406-23.62-18.44l-42.66-171.2L18.47 279.6C7.406 276.8 0 267.3 0 255.1c0-11.34 7.406-20.83 18.44-23.61l171.2-42.78l42.78-171.1C235.2 7.406 244.7 0 256 0s20.84 7.406 23.62 18.44l42.78 171.2l171.2 42.78C504.6 235.2 512 244.6 512 255.1z"
              ></path>
            </svg>
          </span>
          <span class="magic-star">
            <svg viewBox="0 0 512 512">
              <path
                d="M512 255.1c0 11.34-7.406 20.86-18.44 23.64l-171.3 42.78l-42.78 171.1C276.7 504.6 267.2 512 255.9 512s-20.84-7.406-23.62-18.44l-42.66-171.2L18.47 279.6C7.406 276.8 0 267.3 0 255.1c0-11.34 7.406-20.83 18.44-23.61l171.2-42.78l42.78-171.1C235.2 7.406 244.7 0 256 0s20.84 7.406 23.62 18.44l42.78 171.2l171.2 42.78C504.6 235.2 512 244.6 512 255.1z"
              ></path>
            </svg>
          </span>
          <span class="magic-star">
            <svg viewBox="0 0 512 512">
              <path
                d="M512 255.1c0 11.34-7.406 20.86-18.44 23.64l-171.3 42.78l-42.78 171.1C276.7 504.6 267.2 512 255.9 512s-20.84-7.406-23.62-18.44l-42.66-171.2L18.47 279.6C7.406 276.8 0 267.3 0 255.1c0-11.34 7.406-20.83 18.44-23.61l171.2-42.78l42.78-171.1C235.2 7.406 244.7 0 256 0s20.84 7.406 23.62 18.44l42.78 171.2l171.2 42.78C504.6 235.2 512 244.6 512 255.1z"
              ></path>
            </svg>
          </span>
          <span class="magic-text">Why</span>
        </span>
      </h1>
      <p class="mt-10 text-xl">
        The reason for creating this website was to create a portal of different
        isIntersecting web application utilities I have discovered over years ,
        essentially a dear diary or journal
      </p>
      <p class="text-xl mt-5">
        I know there are several way better libraries like Bootstrap , next ui ,
        code pen , etc , <b>so whats the point ?</b>
         well i wanted to create something of my own which could better my
        experience of documenting and creating various Front end resources
      </p>
    </div>
    <div id="section2" class="h-[75vh] section">
      <strong class="text-3xl">Future</strong>
      <p class="mt-10 text-xl">
        I am going to keep extending and polishing this application this is at
        its beta phase at this moment but this is a kind of application that is
        not going to be Complete as i am going to keep on discovering new things
      </p>
    </div>
    <div id="section3" class="h-[75vh] section">
      <strong class="text-3xl">Community</strong>
      <p class="mt-10 text-xl">
        Its quite a milestone to even thinking about doing so but I plan to
        invite some of my friends in this , there is a long shot before I make
        this even more accessible for others to collaborate on but hey , I am
        planning to
      </p>
    </div>
    <!-- Add more sections as needed -->
  </div>
  <div id="image-section" class="overflow-hidden max-h-screen bg-cover rounded">
    <div
      id="img-section1"
      class="h-full w-full bg-cover image visible"
      style={{ backgroundImage: `url(/theme.jpg)` }}
    >
    </div>
    <div
      id="img-section2"
      class="h-full w-full image bg-cover"
      style={{ backgroundImage: `url(/layouts.jpg)` }}
    >
    </div>
    <div
      id="img-section3"
      class="h-full w-full image bg-cover"
      style={{ backgroundImage: `url(/components.jpg)` }}
    >
    </div>
  </div>
</div>

<style>
  :root {
    --purple: rgb(123, 31, 162);
    --violet: rgb(103, 58, 183);
    --pink: rgb(244, 143, 177);
  }

  @keyframes background-pan {
    from {
      background-position: 0% center;
    }

    to {
      background-position: -200% center;
    }
  }

  @keyframes scale {
    from,
    to {
      transform: scale(0);
    }

    50% {
      transform: scale(1);
    }
  }

  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }

    to {
      transform: rotate(180deg);
    }
  }

  

  h1 {
    color: white;
    font-family: "Rubik", sans-serif;
    font-size: clamp(2em, 2vw, 4em);
    font-weight: 400;
    margin: 0px;
    padding: 20px;
    text-align: center;
  }

  h1 > .magic {
    display: inline-block;
    position: relative;
  }

  h1 > .magic > .magic-star {
    --size: clamp(20px, 1.5vw, 30px);

    animation: scale 700ms ease forwards;
    display: block;
    height: var(--size);
    left: var(--star-left);
    position: absolute;
    top: var(--star-top);
    width: var(--size);
  }

  h1 > .magic > .magic-star > svg {
    animation: rotate 1000ms linear infinite;
    display: block;
    opacity: 0.7;
  }

  h1 > .magic > .magic-star > svg > path {
    fill: var(--violet);
  }

  h1 > .magic > .magic-text {
    animation: background-pan 3s linear infinite;
    background: linear-gradient(
      to right,
      var(--purple),
      var(--violet),
      var(--pink),
      var(--purple)
    );
    background-size: 200%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    white-space: nowrap;
  }

  #text-section {
    width: 50%;
    overflow-y: scroll;
    padding: 20px;
  }

  #image-section {
    width: 50%;
    position: relative;
  }

  .image {
    opacity: 0;
    width: 0px;
    height: 0px;
    transition: opacity 0.5s ease-in-out;
  }

  .image.visible {
    width: 100%;
    height: 100%;
    opacity: 1;
  }
</style>

<script>
  //@ts-nocheck
  const sections = document.querySelectorAll(".section");
  const images = document.querySelectorAll(".image");
  const options = {
    root: null,
    rootMargin: "0px",
    threshold: 0.5, // Adjust this threshold as needed
  };

  const callback = (entries, observer) => {
    images.forEach((image, i) => {
      image.classList.remove("visible");
    });
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        console.log("Element with ID:", entry.target.id, "is now visible");
        let img = "img-" + entry.target.id;
        let imgToShow = document.getElementById(img);
        imgToShow?.classList.add("visible");
      }
    });
  };

  const observer = new IntersectionObserver(callback, options);

  sections.forEach((section) => {
    observer.observe(section);
  });

  $(function () {
    let index = 0,
      interval = 1000;

    const rand = (min, max) =>
      Math.floor(Math.random() * (max - min + 1)) + min;

    const animate = (star) => {
      star.style.setProperty("--star-left", `${rand(-10, 100)}%`);
      star.style.setProperty("--star-top", `${rand(-40, 80)}%`);

      star.style.animation = "none";
      star.offsetHeight;
      star.style.animation = "";
    };

    for (const star of document.getElementsByClassName("magic-star")) {
      setTimeout(
        () => {
          animate(star);

          setInterval(() => animate(star), 1000);
        },
        index++ * (interval / 3)
      );
    }
  });
</script>
